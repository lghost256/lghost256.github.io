<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on lghost256&#39;s blog</title>
    <link>http://localhost:1313/es/tags/linux/</link>
    <description>Recent content in Linux on lghost256&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <lastBuildDate>Thu, 19 Jun 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/es/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Convierte Linux en un conmutador (switch) de software con NetworkManager</title>
      <link>http://localhost:1313/es/posts/convierte-linux-en-conmutador-software/</link>
      <pubDate>Thu, 19 Jun 2025 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/es/posts/convierte-linux-en-conmutador-software/</guid>
      
      <description>&lt;h1 id=&#34;algo-de-contexto&#34;&gt;Algo de contexto&lt;/h1&gt;
&lt;p&gt;Hace unas semanas, empecé a elaborar un laboratorio en GNS3 para repasar mis habilidades en detección de intrusiones. Instalé Wazuh en un servidor, los agentes en los endpoints, y todo funcionó correctamente. Pero enseguida me di cuenta de que me faltaba una parte clave en mi detección: datos de red. Decidí usar &lt;em&gt;Suricata&lt;/em&gt; para recoger esos datos, pero me topé con un problema: los switches virtuales en GNS3 son útiles para reenviar tramas de nivel 2, pero no cuentan con funciones avanzadas como el port mirroring (que permitiría enviar copias del tráfico a Suricata para monitorizarlo). Sin esta función, tuve que buscar una alternativa para que Suricata pudiera capturar todo el tráfico de mi red.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
